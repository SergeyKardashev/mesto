import {
  // initialCards,
  validationConfig,
  popupUser,
  addPlaceButton,
  editProfileBtn,
  likeNumber,
  editAvatarBtn,
} from "../utils/constants.js";
import Card from "../components/Card.js";
import FormValidator from "../components/FormValidator.js";
import { Section } from "../components/Section.js";
import { PopupWithImage } from "../components/PopupWithImage.js";
import { PopupWithForm } from "../components/PopupWithForm.js";
import { UserInfo } from "../components/UserInfo.js";
import { Api } from "../components/Api.js";
import { PopupWithConfirm } from "../components/PopupWithConfirm.js";

import "./index.css"; // –∏–º–ø–æ—Ä—Ç –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å—Ç–∏–ª–µ–π. –¢–∞–∫–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ–±–ø–∞–∫–∞

// üß¢  —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞ –ó–£–ú–∞ - —Ñ—É–Ω–∫—Ü–∏—è –∑—É–º–∏—Ä–æ–≤–∞–Ω–∏—è
const handleCardClick = (cardData) => zoomPopup.open(cardData);
//
//
//// üß¢ –∫–æ–ª–±–µ–∫ –ø–æ –∫–æ–Ω—Ñ–∏—Ä–º—É (—Å–∞–±–º–∏—Ç –ø–æ–ø–∞–ø–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º).
// –û—Ç–¥–∞—é –µ–≥–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–ª–∞—Å—Å—É Card.
function handleDelete(card) {
  confirmPopup.open(() => {
    api
      .delete(card._cardData._id)
      .then((res) => {
        if (res.ok) {
          return res.json();
        }
        return Promise.reject(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${res.status}`);
      })
      .then(() => {
        card.handleDelete();
        confirmPopup.close();
      })
      .catch((err) => {
        console.log(err);
      });
  });
}
//
const confirmPopup = new PopupWithConfirm(".popup_type_confirm-del");
confirmPopup.setEventListeners();
//
//
// üß¢ üî¥ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏. –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç, –Ω–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞—Å—Å–∞.
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑-—Ç —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–∞ getCard –∫–∞–ª–∞—Å—Å–∞ Card, —Ç.–µ. –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏
// const createCard = (...args) => new Card(...args).getCard();
// –∑–∞–Ω–µ—Å–ª–∏ –≤—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –≤ –º–∞—Å—Å–∏–≤ ...args. –ü–µ—Ä–µ—á–∏—Ç–∞—Ç—å –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å rest, spread

const api = new Api({
  baseUrl: "https://mesto.nomoreparties.co/v1/cohort-68",
  headers: {
    authorization: "200161f1-5909-4319-b9ce-fec02ac5663d",
    "Content-Type": "application/json",
  },
});

function handleLike(cardInstance) {
  if (cardInstance.isLiked) {
    api.removeLike(cardInstance._cardData).then((cardData) => {
      cardInstance._likesElement.textContent = cardData.likes.length;
      cardInstance._likeButton.classList.toggle("gallery__like_active");
    });
  } else {
    api.addLike(cardInstance._cardData).then((cardData) => {
      cardInstance._likesElement.textContent = cardData.likes.length;
      cardInstance._likeButton.classList.toggle("gallery__like_active");
    });
  }
}

let userID = "";

// üß¢ –§—É–Ω–∫—Ü–∏—è-–∫–æ–ª–±—ç–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∏. –î–µ–∫–ª–∞—Ä–∞—Ü–∏—è. –ù–ï –≤—ã–∑–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–æ—Ä—ã—á–æ–º.
const renderCard = (data) => {
  // –≤ var —Ç–∞—â—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ = —Ä–∞–∑–º–µ—Ç–∫—É, –∞ –ù–ï –æ–±—ä–µ–∫—Ç
  const cardToAdd = new Card(
    data,
    "#card",
    handleCardClick,
    handleDelete,
    handleLike,
    myUserInfo.data._id
  ).getCard();

  cardSection.addItem(cardToAdd);
};

// –ü–û–õ–£–ß–ê–Æ –ò–ó–ù–ê–ß–ê–õ–¨–ù–´–ï –ö–ê–†–¢–û–ß–ö–ò
const cardSection = new Section(renderCard, ".gallery");

const promiseInitialUserInfo = api.setInitialUserInfo();
const promiseInitialCards = api.getInitialCards();

Promise.all([promiseInitialUserInfo, promiseInitialCards])
  .then(([responseInitialUserInfo, responseInitialCards]) => {
    // userID - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–∫–æ—É–ø–µ.
    // –ï–µ –æ—Ç–¥–∞—é –∫–ª–∞—Å—Å—É Card –¥–ª—è —Å–ª–∏—á–µ–Ω–∏—è –∞–π–¥–∏—à–Ω–∏–∫–æ–≤
    userID = responseInitialUserInfo._id;
    // console.log(responseInitialUserInfo);
    // console.log("filled userID in promise ", userID);

    // const userData = {};
    // userData.name = responseInitialUserInfo.name;
    // userData.about = responseInitialUserInfo.about;
    // userData.id = responseInitialUserInfo._id;
    // userData.avatar = responseInitialUserInfo.avatar;
    myUserInfo.setUserInfo(responseInitialUserInfo);

    // myUserInfo._name = "";
    // myUserInfo._name = "";
    // myUserInfo.data = responseInitialUserInfo;

    // console.log(responseInitialCards);
    // console.log("%c myUserInfo ", "background: darkblue", myUserInfo);
    // console.log("%c user_id ", " color: lime", myUserInfo.data._id);

    // responseInitialCards - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
    // renderItems- –∫–æ–ª–±—ç–∫. –°–æ–∑–¥–∞–µ—Ç+–Ω–∞–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º.
    // –û—Ç–¥–∞–µ—Ç –µ–µ –≤—Å—Ç–∞–≤–∏—Ç—å.
    cardSection.renderItems(responseInitialCards);
  })
  .catch((err) => {
    console.log(err);
  });

// –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ UserInfo —Å–æ–∑–¥–∞–µ—Ç—Å—è –µ–¥–∏–Ω–æ–∂–¥—ã
export const myUserInfo = new UserInfo({
  nameSelector: ".profile__name",
  aboutSelector: ".profile__about",
});

// üß¢ –æ–ø–∏—Å—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–ª–±—ç–∫ —Å–∞–±–º–∏—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞—Ä–∞–Ω–µ–µ
const handleSubmitProfile = ({ name, about }) => {
  // 3. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –¥–∞–Ω–Ω—ã–µ –∏–¥—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
  api
    .editProfile(name, about)
    .then((res) => {
      if (res.ok) {
        return res.json();
      }
      return Promise.reject(`–û—à–∏–±–∫–∞ —Å–∞–±–º–∏—Ç–∞: ${res.status}`);
    })
    .then((data) => {
      console.log("–¥–∞—Ç–∞ –ø–∞—Ç—á–∞ –ø—Ä–æ—Ñ–∏–ª—è: ", data);
      myUserInfo.setUserInfo(data);
      popupProfile.close();
    })
    .catch((err) => {
      console.log(err);
    });
};

// –ø–æ–ø–∞–ø—É –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–µ–¥–∞—é —Ñ—É–Ω–∫—Ü–∏—é —Å–∞–±–º–∏—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–ª–±—ç–∫–æ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Å—Ç–∞–Ω—Å–∞ –ø–æ–ø–∞–ø–∞
const popupProfile = new PopupWithForm(
  ".popup_type_user-profile",
  (inputVaues) => {
    handleSubmitProfile(inputVaues);
  }
);
// –≤–µ—à–∞—é —Å–ª—É—à–∞—Ç–µ–ª–∏ –ø–æ–ø–∞–ø—É –ø—Ä–æ—Ñ–∏–ª—è
popupProfile.setEventListeners();

// üß¢ üë®‚Äçüíº –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è - –æ—Ç–∫—Ä–æ–µ—Ç –ø–æ–ø–∞–ø
const editProfile = () => {
  formValidators["profile-form"].resetValidation();
  // –ù–∞–ø–æ–ª–Ω—è—é –ø–æ–ª—è —Ñ–æ—Ä–º—ã –¥–∞–Ω–Ω—ã–º–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ UserInf

  // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –ø–æ–∫–∏–Ω—É—Ç –ø—Ä–µ–¥–µ–ª—ã —Å–ª—É—à–∞—Ç–µ–ª—è
  const { name, about } = myUserInfo.getUserInfo();

  popupUser.nameInput.value = name;
  popupUser.aboutInput.value = about;

  popupProfile.open();
};

// üë®‚Äçüíº
editProfileBtn.addEventListener("click", () => editProfile());

// üß¢ –∫–æ–ª–±—ç–∫ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–∞–±–º–∏—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
const handleSubmitAddPlace = (formData) => {
  formValidators["add-place-form"].resetValidation();
  api
    .addCard({ name: formData.placeName, link: formData.placeUrl })
    .then((res) => {
      if (res) {
        return res.json();
      }
      return Promise.reject(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏: ${res.status}`);
    })
    .then((cardDataFromApi) => {
      console.log("cardDataFromApi ", cardDataFromApi);
      const card1by1 = new Card(
        cardDataFromApi,
        "#card",
        handleCardClick,
        handleDelete,
        handleLike,
        myUserInfo.data._id
      );
      cardSection.addItem(card1by1.getCard());
      addPlacePopup.close();
    })
    .catch((err) => {
      console.log(err);
    });
};

const addPlacePopup = new PopupWithForm(".popup_type_new-place", (formData) => {
  handleSubmitAddPlace(formData);
});

addPlacePopup.setEventListeners();

addPlaceButton.addEventListener("click", (evt) => {
  formValidators["add-place-form"].resetValidation();
  addPlacePopup.open();
});

const zoomPopup = new PopupWithImage(".popup_type_zoom-image");

zoomPopup.setEventListeners();

const formValidators = {}; // —Å–æ–∑–¥–∞—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É —Å –ø—É—Å—Ç—ã—Å–º –æ–±—ä–µ–∫—Ç–æ–º.

// üß¢ –æ–ø–∏—Å—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é –≤–∞–ª–∏—Ç–∞—Ç–æ—Ä
const enableValidation = (validationConfig) => {
  // –°–æ–±–∏—Ä–∞—é –º–∞—Å—Å–∏–≤ —Ñ–æ—Ä–º (–º–∞—Å—Å–∏–≤ –∫—É—Å–∫–æ–≤ —Ä–∞–∑–º–µ—Ç–∫–∏, –∞ –Ω–µ –∏–º—ë–Ω)
  const formList = Array.from(
    document.querySelectorAll(validationConfig.formSelector)
  );

  formList.forEach((formElement) => {
    const validator = new FormValidator(validationConfig, formElement);

    const formName = formElement.getAttribute("name");

    formValidators[formName] = validator;
    validator.enableValidation(); // –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –∫–ª–∞—Å—Å–∞, –∞ –Ω–µ —Ä–µ–∫—É—Ä—Å–∏—è
  });
};

enableValidation(validationConfig); // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏

//
//

// üî¥üî¥üî¥üî¥üî¥üî¥üî¥üî¥üî¥

// üß¢ –æ–ø–∏—Å—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–ª–±—ç–∫ —Å–∞–±–º–∏—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞—Ä–∞–Ω–µ–µ
// const handleSubmitProfile = ({ name, about }) => {
//   // 3. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –¥–∞–Ω–Ω—ã–µ –∏–¥—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
//   api
//     .editProfile(name, about)
//     .then((res) => {
//       if (res.ok) {
//         return res.json();
//       }
//       return Promise.reject(`–û—à–∏–±–∫–∞ —Å–∞–±–º–∏—Ç–∞: ${res.status}`);
//     })
//     .then((data) => {
//       console.log("–¥–∞—Ç–∞ –ø–∞—Ç—á–∞ –ø—Ä–æ—Ñ–∏–ª—è: ", data);
//       myUserInfo.setUserInfo(data);
//       popupProfile.close();
//     })
//     .catch((err) => {
//       console.log(err);
//     });
// };

// üß¢ üë®‚Äçüíº –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ - –æ—Ç–∫—Ä–æ–µ—Ç –ø–æ–ø–∞–ø
function editAvatar() {
  formValidators["avatar-form"].resetValidation();
  popupAvatar.open();
}

// –≤–µ—à–∞—é —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∞–≤–∞—Ç–∞—Ä
editAvatarBtn.addEventListener("click", () => editAvatar());

// üß¢ üë®‚Äçüíº –∫–æ–ª–±—ç–∫ —Å–∞–±–º–∏—Ç–∞ –∞–≤–∞—Ç–∞—Ä–∞
function handleAvatarEdit(inputValue) {
  api
    .avatarEdit(inputValue)
    .then((newAvatarLink) => {
      console.log("–æ—Ç–≤–µ—Ç –Ω–∞ –∞–ø–¥–µ–π—Ç –∞–≤—ã —Å –∞–ø–∏: ", newAvatarLink);
    })
    .catch((err) => {
      console.log(err);
    });
  // —ç—Ç–æ —É–π–¥–µ—Ç –≤ then
  // myUserInfo.setUserInfo(newAvatarLink);
}

// popup AVATAR URL
const popupAvatar = new PopupWithForm(".popup_type_avatar", handleAvatarEdit);
popupAvatar.setEventListeners();
