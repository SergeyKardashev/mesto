(()=>{"use strict";var __webpack_modules__={665:()=>{eval('\n;// CONCATENATED MODULE: ./src/utils/constants.js\n// массив для изначального наполнения галлереи\n\n// Можно прописать слово ЭКСПОРТ перед переменной и не вызывать команду export { initialCards };\n// Просто другой способ.\n// export const initialCards = [ ...\n\nvar initialCards = [{\n  name: "Архыз",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"\n}, {\n  name: "Челябинская область",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"\n}, {\n  name: "Иваново",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"\n}, {\n  name: "Камчатка",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"\n}, {\n  name: "Холмогорский район",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"\n}, {\n  name: "Байкал",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"\n}];\nvar validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__submit-button",\n  inactiveButtonClass: "popup__submit-button_inactive",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible"\n};\nvar popupUser = function () {\n  var popup = document.querySelector(".popup_type_user-profile");\n  return {\n    popup: popup,\n    // form: popup.querySelector(".popup__form_type_user-profile"),\n    form: document.forms["profile-form"],\n    nameInput: popup.querySelector(".popup__input_type_user-name"),\n    jobInput: popup.querySelector(".popup__input_type_user-job")\n  };\n}(); // Последние 2 скобки не лишние - самовызывающаяся функция.\n\nvar addPlaceButton = document.querySelector(".profile__add-place-btn");\nvar addPlaceForm = document.querySelector(".popup__form_type_add-place");\n// export const placeNameInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-name"\n// );\n// export const pleceUrlInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-url"\n// );\nvar editProfileBtn = document.querySelector(".profile__edit-btn");\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(cardData, templateSelector, onImageClick) {\n    _classCallCheck(this, Card);\n    this._onImageClick = onImageClick;\n    this._cardData = cardData;\n    this._templateSelector = templateSelector;\n    this._template = document.querySelector(this._templateSelector).content;\n  }\n  _createClass(Card, [{\n    key: "_handleDelete",\n    value: function _handleDelete() {\n      if (this._card) {\n        this._card.remove();\n        this._card = null; // Лучше при удалении карточки очистить ссылку на DOM-элемент:\n      }\n    }\n  }, {\n    key: "_toggleLike",\n    value: function _toggleLike() {\n      this._likeButton.classList.toggle("gallery__like_active");\n    }\n  }, {\n    key: "_setListeners",\n    value: function _setListeners() {\n      var _this = this;\n      this._deleteButton.addEventListener("click", function () {\n        return _this._handleDelete();\n      });\n      this._likeButton.addEventListener("click", function () {\n        return _this._toggleLike();\n      });\n      this._cardImage.addEventListener("click", function () {\n        return _this._onImageClick(_this._cardData);\n      });\n    }\n  }, {\n    key: "_createCard",\n    value: function _createCard() {\n      // нельзя перенести this._card и все что в нем ищется в конструктор,\n      // т.к. ниже в методе getCard условие на отсутствие карточки.\n      // Если объявить ее в конструкторе, то условие ее найдет и не создаст новую.\n      // Почитать про патерн Singleton или одиночка.\n      this._card = this._template.cloneNode(true).children[0];\n      this._cardImage = this._card.querySelector(".gallery__img");\n      this._cardText = this._card.querySelector(".gallery__text");\n      this._deleteButton = this._card.querySelector(".gallery__delete");\n      this._likeButton = this._card.querySelector(".gallery__like");\n      this._cardImage.src = this._cardData.link;\n      this._cardImage.alt = this._cardData.name;\n      this._cardText.textContent = this._cardData.name;\n      this._setListeners();\n    }\n  }, {\n    key: "getCard",\n    value: function getCard() {\n      if (!this._card) {\n        this._createCard();\n      }\n      return this._card;\n    }\n  }]);\n  return Card;\n}();\n/* harmony default export */ const components_Card = (Card);\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = FormValidator_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, form) {\n    var _this = this;\n    FormValidator_classCallCheck(this, FormValidator);\n    _defineProperty(this, "_toggleButton", function () {\n      if (_this._form.checkValidity()) {\n        _this._enableButton();\n      } else {\n        _this._disableButton();\n      }\n    });\n    _defineProperty(this, "_setInputValid", function (formField) {\n      formField.input.classList.remove(_this._config.inputErrorClass);\n      formField.error.textContent = "";\n      formField.error.classList.remove(_this._config.errorClass);\n    });\n    _defineProperty(this, "_setInputInvalid", function (formField) {\n      formField.input.classList.add(_this._config.inputErrorClass);\n      formField.error.textContent = formField.input.validationMessage;\n      formField.error.classList.add(_this._config.errorClass);\n    });\n    _defineProperty(this, "_checkInputValidity", function (formField) {\n      if (formField.input.checkValidity()) {\n        _this._setInputValid(formField);\n      } else {\n        _this._setInputInvalid(formField);\n      }\n    });\n    // ощистка форм от ошибок, оставленных при прошлом закрытии формы.\n    _defineProperty(this, "resetValidation", function () {\n      _this._toggleButton();\n      _this._formFields.forEach(function (formField) {\n        _this._setInputValid(formField);\n      });\n    });\n    _defineProperty(this, "_setListeners", function () {\n      _this._formFields.forEach(function (formField) {\n        formField.input.addEventListener("input", function () {\n          _this._checkInputValidity(formField);\n          _this._toggleButton(_this._config, _this._form);\n        });\n      });\n    });\n    _defineProperty(this, "enableValidation", function () {\n      _this._setListeners();\n      _this._toggleButton();\n    });\n    this._config = config;\n    this._form = form;\n    this._submitButton = this._form.querySelector(this._config.submitButtonSelector);\n    this._inputs = this._form.querySelectorAll(this._config.inputSelector);\n    this._inputsArray = Array.from(this._inputs);\n    this._formFields = this._inputsArray.map(function (input) {\n      return {\n        input: input,\n        error: _this._form.querySelector(".".concat(input.id, "-input-error"))\n      };\n    });\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_enableButton",\n    value: function _enableButton() {\n      // this._submitButton.removeAttribute("disabled"); // полная запись\n      this._submitButton.disabled = false; // краткая версия\n      this._submitButton.classList.remove(this._config.inactiveButtonClass);\n    }\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.disabled = true; // краткая версия\n      // this._submitButton.setAttribute("disabled", "true"); // полная версия\n      this._submitButton.classList.add(this._config.inactiveButtonClass);\n    }\n  }]);\n  return FormValidator;\n}();\n/* harmony default export */ const components_FormValidator = (FormValidator);\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerSelector) {\n    var items = _ref.items,\n      renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this.items = items;\n    this.renderer = renderer;\n    this.container = document.querySelector(containerSelector);\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value: function renderItems() {\n      var _this = this;\n      this.items.forEach(function (itemData) {\n        _this.renderer(itemData);\n      });\n    }\n  }, {\n    key: "addItem",\n    value: function addItem(htmlElement) {\n      this.container.prepend(htmlElement);\n    }\n  }]);\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nСоздайте класс Popup, который отвечает за открытие и закрытие попапа. Этот класс:\nПринимает в конструктор единственный параметр — селектор попапа.\nСодержит публичные методы open и close, которые отвечают за открытие и закрытие попапа.\nСодержит приватный метод _handleEscClose, который содержит логику закрытия попапа клавишей Esc.\n\nСодержит публичный метод setEventListeners, который добавляет слушатель клика иконке закрытия попапа.\nМодальное окно также закрывается при клике на затемнённую область вокруг формы.\n*/\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    this._popup = document.querySelector(popupSelector);\n    this._closeButton = this._popup.querySelector(".popup__close-button");\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopupByOverlay = this._closePopupByOverlay.bind(this);\n  }\n  Popup_createClass(Popup, [{\n    key: "_closePopupByOverlay",\n    value: function _closePopupByOverlay(evt) {\n      if (evt.target.classList.contains("popup")) {\n        this.close();\n      }\n    }\n  }, {\n    key: "open",\n    value: function open() {\n      this._popup.classList.add("popup_opened");\n      document.addEventListener("keydown", this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove("popup_opened");\n      document.removeEventListener("keydown", this._handleEscClose); // Удаляю слушатель клавы.\n    }\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(evt) {\n      if (evt.key === "Escape") {\n        this.close();\n      }\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this = this;\n      // добавление слушателя на Оверлей\n      this._popup.addEventListener("click", this._closePopupByOverlay);\n      this._closeButton.addEventListener("click", function () {\n        return _this.close();\n      });\n    }\n  }]);\n  return Popup;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\nСоздайте класс PopupWithImage, который наследует от Popup.\nЭтот класс должен перезаписывать родительский метод open.\nВ методе open класса PopupWithImage нужно вставлять в попап картинку с src изображения и подписью к картинке.\n*/\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._zoomedImg = _this._popup.querySelector(".popup__image-zoom");\n    _this._caption = _this._popup.querySelector(".popup__caption");\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(_ref) {\n      var name = _ref.name,\n        link = _ref.link;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n      this._zoomedImg.src = link;\n      this._zoomedImg.alt = name;\n      this._caption.textContent = name;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\n/*\nСоздайте класс PopupWithForm, который наследует от Popup. Этот класс:\nКроме селектора попапа принимает в конструктор колбэк сабмита формы.\n\nСодержит приватный метод _getInputValues, который собирает данные всех полей формы.\nПерезаписывает родительский метод setEventListeners.\nМетод setEventListeners класса PopupWithForm должен не только добавлять\nобработчик клика иконке закрытия, но и добавлять обработчик сабмита формы.\nПерезаписывает родительский метод close, так как при закрытии попапа форма должна ещё и сбрасываться.\nДля каждого попапа создавайте свой экземпляр класса PopupWithForm.\n*/\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, onSubmit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._onSubmit = onSubmit;\n    _this._form = _this._popup.querySelector(".popup__form");\n    _this._inputList = Array.from(_this._form.querySelectorAll(".popup__input"));\n    _this._handleSubmit = _this._handleSubmit.bind(PopupWithForm_assertThisInitialized(_this));\n    _this.setEventListeners = _this.setEventListeners.bind(PopupWithForm_assertThisInitialized(_this));\n    return _this;\n  }\n\n  // собирает данные всех полей формы.\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._formInputValues = {};\n      this._inputList.forEach(function (input) {\n        _this2._formInputValues[input.name] = input.value;\n      });\n      return this._formInputValues;\n    }\n  }, {\n    key: "_handleSubmit",\n    value: function _handleSubmit(evt) {\n      evt.preventDefault();\n      this._onSubmit(this._getInputValues());\n      // this._close();\n      /*\n      Не стоит прямо в обработчике вызывать метод close, это делает логику сабмита менее гибкой.\n      Вполне вероятно, что при сабмите не нужно будет сразу закрывать попап(например, при ожидании ответа сервера).\n      Лучше вызывать close при необходимости в колбэке\n      */\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener("submit", this._handleSubmit);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nКласс UserInfo отвечает за управление отображением информации о пользователе на странице. Этот класс:\n\nПринимает в конструктор объект с селекторами двух элементов: элемента имени пользователя\nи элемента информации о себе.\n\nСодержит публичный метод getUserInfo, который возвращает объект с данными пользователя.\nЭтот метод пригодится когда данные пользователя нужно будет подставить в форму при открытии.\n\nСодержит публичный метод setUserInfo, который принимает новые данные пользователя и добавляет их на страницу.\n*/\n\n// class names ani IDs\n//\n// <h1> Жак-Ив Кусто has class = profile__name\n// <p> Исследователь океана  class = profile__job\n\n// form classes = popup__form    and    popup__form_type_user-profile\n// form name = profile-form\n\n// input Жак-Ив classes =   popup__input     and      popup__input_type_user-name\n// input Жак-Ив id = user-name\n// input Жак-Ив = name\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var nameSelector = _ref.nameSelector,\n      jobSelector = _ref.jobSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._name = document.querySelector(nameSelector); // page element, NOT ITPUT\n    this._job = document.querySelector(jobSelector); // page element, NOT ITPUT\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return {\n        name: this._name.textContent,\n        job: this._job.textContent\n      };\n    }\n    // принимает новые данные пользователя и добавляет их на страницу\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        job = _ref2.job;\n      this._name.textContent = name; // <h1> на странице\n      this._job.textContent = job; // <p> на странице\n    }\n  }]);\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _construct(Parent, args, Class) { if (pages_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) pages_setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction pages_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction pages_setPrototypeOf(o, p) { pages_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return pages_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n // импорт главного файла стилей. Такая запись только для вебпака\n\n// 🧢  функция открытия попапа ЗУМа - функция зумирования\nvar handleCardClick = function handleCardClick(cardData) {\n  return zoomPopup.open(cardData);\n};\n\n// 🧢 🔴 Функция создания карточки. Функция создает, но не возвращает инстанс класса.\n// Она возвращает работы метода getCard() каласса Card, то есть разметку карточки полностью готовую к вставке\nvar createCard = function createCard() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return _construct(components_Card, args).getCard();\n};\n// занесли все аргументы передаваемые в функцию в массив ...args. Перечитать и тренировать rest, spread\n\n// 🧢 Функция-колбэк. Обявление, а не вызов\nvar renderCard = function renderCard(data) {\n  // создаем переменную, заносим в нее результат работы функции, т.е. разметку\n  var cardToAdd = createCard(data, "#card", handleCardClick);\n\n  // вставляю в разметку то, что вернет метод - клонированный и заполненный фрагмент разметки\n  cardSection.addItem(cardToAdd);\n};\nvar cardSection = new Section({\n  items: initialCards,\n  renderer: renderCard\n}, ".gallery");\ncardSection.renderItems();\n\n// 🧢 описываю функцию-колбэк сабмита профиля заранее\nvar handleSubmitProfile = function handleSubmitProfile(_ref) {\n  var name = _ref.name,\n    job = _ref.job;\n  myUserInfo.setUserInfo({\n    name: name,\n    job: job\n  });\n  popupProfile.close();\n};\n\n// попапу профиля передаю функцию сабмита профиля колбэком при создании инстанса попапа\nvar popupProfile = new PopupWithForm(".popup_type_user-profile", function (inputVaues) {\n  handleSubmitProfile(inputVaues);\n});\nvar myUserInfo = new UserInfo({\n  nameSelector: ".profile__name",\n  jobSelector: ".profile__job"\n});\n\n// вешаю слушатели попапу профиля\npopupProfile.setEventListeners();\n\n// 🧢 👨‍💼 колбэк кнопки редактирования профиля - откроет попап\nvar editProfile = function editProfile() {\n  formValidators["profile-form"].resetValidation();\n  // Наполняю поля формы данными со страницы через метод класса UserInf\n\n  // деструктуризация. Переменные не покинут пределы слушателя\n  var _myUserInfo$getUserIn = myUserInfo.getUserInfo(),\n    name = _myUserInfo$getUserIn.name,\n    job = _myUserInfo$getUserIn.job;\n  popupUser.nameInput.value = name;\n  popupUser.jobInput.value = job;\n  popupProfile.open();\n};\n\n// 👨‍💼\neditProfileBtn.addEventListener("click", function () {\n  return editProfile();\n});\n\n// 🧢 колбэк слушателя сабмита карточки\nvar handleSubmitAddPlace = function handleSubmitAddPlace(formData) {\n  formValidators["add-place-form"].resetValidation();\n  var cardDataCollected = {\n    name: formData.placeName,\n    link: formData.placeUrl\n  };\n  var card1by1 = new components_Card(cardDataCollected, "#card", handleCardClick);\n  cardSection.addItem(card1by1.getCard());\n  addPlacePopup.close();\n};\nvar addPlacePopup = new PopupWithForm(".popup_type_new-place", function (formData) {\n  handleSubmitAddPlace(formData);\n});\naddPlacePopup.setEventListeners();\naddPlaceButton.addEventListener("click", function (evt) {\n  formValidators["add-place-form"].resetValidation();\n  addPlacePopup.open();\n});\nvar zoomPopup = new PopupWithImage(".popup_type_zoom-image");\nzoomPopup.setEventListeners();\nvar formValidators = {}; // создаю константу с пустысм объектом.\n\n// 🧢 описываю функцию валитатор\nvar enableValidation = function enableValidation(validationConfig) {\n  // Собираю массив форм (массив кусков разметки, а не имён)\n  var formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach(function (formElement) {\n    var validator = new components_FormValidator(validationConfig, formElement);\n    var formName = formElement.getAttribute("name");\n    formValidators[formName] = validator;\n    validator.enableValidation(); // вызов метода класса, а не рекурсия\n  });\n};\n\nenableValidation(validationConfig); // вызов функции\n\n/*\nhttps://mesto.nomoreparties.co\n200161f1-5909-4319-b9ce-fec02ac5663d\ncohort-68\n\nfetch(\'https://mesto.nomoreparties.co/v1/cohort-42/cards\', {\n  headers: {\n    authorization: \'c56e30dc-2883-4270-a59e-b2f7bae969c6\'\n  }\n})\n  .then(res => res.json())\n  .then((result) => {\n    console.log(result);\n  });\n\n  */\n\nfetch("https://mesto.nomoreparties.co/v1/cohort-68/cards", {\n  headers: {\n    authorization: "200161f1-5909-4319-b9ce-fec02ac5663d"\n  }\n}).then(function (res) {\n  return res.json();\n}).then(function (result) {\n  console.log(result);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///665\n')}},__webpack_exports__={};__webpack_modules__[665]()})();