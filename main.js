(()=>{"use strict";var __webpack_modules__={750:()=>{eval('\n// UNUSED EXPORTS: myUserInfo\n\n;// CONCATENATED MODULE: ./src/utils/constants.js\nvar validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__submit-button",\n  inactiveButtonClass: "popup__submit-button_inactive",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible"\n};\nvar popupUser = function () {\n  var popup = document.querySelector(".popup_type_user-profile");\n  return {\n    popup: popup,\n    // form: popup.querySelector(".popup__form_type_user-profile"),\n    form: document.forms["profile-form"],\n    nameInput: popup.querySelector(".popup__input_type_user-name"),\n    aboutInput: popup.querySelector(".popup__input_type_user-about")\n  };\n}(); // Последние 2 скобки не лишние - самовызывающаяся функция.\n\nvar addPlaceButton = document.querySelector(".profile__add-place-btn");\nvar addPlaceForm = document.querySelector(".popup__form_type_add-place");\n// export const placeNameInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-name"\n// );\n// export const pleceUrlInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-url"\n// );\nvar editProfileBtn = document.querySelector(".profile__edit-btn");\n\n// export const likeNumber = document.querySelector(".gallery__like-number");\n\nvar editAvatarBtn = document.querySelector(".profile__avatar-edit-btn");\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(cardData, templateSelector, onImageClick, onDelete, onLike, userID) {\n    _classCallCheck(this, Card);\n    this._onImageClick = onImageClick;\n    this._onDelete = onDelete;\n    this.cardData = cardData;\n    this._userID = userID;\n    this._onLike = onLike;\n    this._onLike = this._onLike.bind(this);\n    // this.isLiked = this.cardData.likes.some((likes)=>{return likes._id === this._userID;});\n    this._template = document.querySelector(templateSelector).content;\n    this.updateLikes = this.updateLikes.bind(this);\n  }\n  _createClass(Card, [{\n    key: "updateLikes",\n    value: function updateLikes(cardData) {\n      var _this = this;\n      this._likesElement.textContent = cardData.likes.length;\n      // this.isLiked = !this.isLiked;\n      this.isLiked = cardData.likes.some(function (likes) {\n        return likes._id === _this._userID;\n      });\n      this._likeButton.classList.toggle("gallery__like_active", this.isLiked);\n    }\n  }, {\n    key: "handleDelete",\n    value: function handleDelete() {\n      if (this._card) {\n        this._card.remove();\n        this._card = null; // Лучше при удалении карточки очистить ссылку на DOM-элемент:\n      }\n    }\n  }, {\n    key: "_setListeners",\n    value: function _setListeners() {\n      var _this2 = this;\n      this._deleteButton.addEventListener("click", function () {\n        return _this2._onDelete(_this2);\n      }); // original delete // this._deleteButton.addEventListener("click", () => this._handleDelete());\n      this._likeButton.addEventListener("click", function () {\n        return _this2._onLike(_this2);\n      });\n      this._cardImage.addEventListener("click", function () {\n        return _this2._onImageClick(_this2.cardData);\n      });\n    }\n  }, {\n    key: "_createCard",\n    value: function _createCard() {\n      /* нельзя перенести this._card и все что в нем ищется в конструктор,т.к. ниже в методе getCard условие на отсутствие карточки. Если объявить ее в конструкторе, то условие ее найдет и не создаст новую.\n      Почитать про патерн Singleton или одиночка. */\n      this._card = this._template.cloneNode(true).children[0];\n      this._cardImage = this._card.querySelector(".gallery__img");\n      this._cardText = this._card.querySelector(".gallery__text");\n      this._deleteButton = this._card.querySelector(".gallery__delete");\n      this._likeButton = this._card.querySelector(".gallery__like");\n      this._likesElement = this._card.querySelector(".gallery__like-number");\n      this._cardImage.src = this.cardData.link;\n      this._cardImage.alt = this.cardData.name;\n      this._cardText.textContent = this.cardData.name;\n      this._likesElement.textContent = this.cardData.likes.length;\n      this._setListeners();\n    }\n  }, {\n    key: "getCard",\n    value: function getCard() {\n      var _this3 = this;\n      if (!this._card) {\n        this._createCard();\n      }\n      // определю залайкана ли карточка МНОЮ\n      this.isLiked = this.cardData.likes.some(function (likes) {\n        return likes._id === _this3._userID;\n      });\n      // если я лайкнул ранее, то крашу сердечно\n      if (this.isLiked) {\n        this._likeButton.classList.add("gallery__like_active");\n      }\n      if (this._userID !== this.cardData.owner._id) {\n        this._deleteButton.remove();\n        this._deleteButton = null; // console.log("IDs don\'t match");\n      }\n\n      return this._card;\n    }\n  }]);\n  return Card;\n}();\n/* harmony default export */ const components_Card = (Card);\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = FormValidator_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, form) {\n    var _this = this;\n    FormValidator_classCallCheck(this, FormValidator);\n    _defineProperty(this, "_toggleButton", function () {\n      if (_this._form.checkValidity()) {\n        _this._enableButton();\n      } else {\n        _this._disableButton();\n      }\n    });\n    _defineProperty(this, "_setInputValid", function (formField) {\n      formField.input.classList.remove(_this._config.inputErrorClass);\n      formField.error.textContent = "";\n      formField.error.classList.remove(_this._config.errorClass);\n    });\n    _defineProperty(this, "_setInputInvalid", function (formField) {\n      formField.input.classList.add(_this._config.inputErrorClass);\n      formField.error.textContent = formField.input.validationMessage;\n      formField.error.classList.add(_this._config.errorClass);\n    });\n    _defineProperty(this, "_checkInputValidity", function (formField) {\n      if (formField.input.checkValidity()) {\n        _this._setInputValid(formField);\n      } else {\n        _this._setInputInvalid(formField);\n      }\n    });\n    // ощистка форм от ошибок, оставленных при прошлом закрытии формы.\n    _defineProperty(this, "resetValidation", function () {\n      _this._toggleButton();\n      _this._formFields.forEach(function (formField) {\n        _this._setInputValid(formField);\n      });\n    });\n    _defineProperty(this, "_setListeners", function () {\n      _this._formFields.forEach(function (formField) {\n        formField.input.addEventListener("input", function () {\n          _this._checkInputValidity(formField);\n          _this._toggleButton(_this._config, _this._form);\n        });\n      });\n    });\n    _defineProperty(this, "enableValidation", function () {\n      _this._setListeners();\n      _this._toggleButton();\n    });\n    this._config = config;\n    this._form = form;\n    this._submitButton = this._form.querySelector(this._config.submitButtonSelector);\n    this._inputs = this._form.querySelectorAll(this._config.inputSelector);\n    this._inputsArray = Array.from(this._inputs);\n    this._formFields = this._inputsArray.map(function (input) {\n      return {\n        input: input,\n        error: _this._form.querySelector(".".concat(input.id, "-input-error"))\n      };\n    });\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_enableButton",\n    value: function _enableButton() {\n      // this._submitButton.removeAttribute("disabled"); // полная запись\n      this._submitButton.disabled = false; // краткая версия\n      this._submitButton.classList.remove(this._config.inactiveButtonClass);\n    }\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.disabled = true; // краткая версия\n      // this._submitButton.setAttribute("disabled", "true"); // полная версия\n      this._submitButton.classList.add(this._config.inactiveButtonClass);\n    }\n  }]);\n  return FormValidator;\n}();\n/* harmony default export */ const components_FormValidator = (FormValidator);\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(renderer, containerSelector) {\n    Section_classCallCheck(this, Section);\n    this.renderer = renderer;\n    this.container = document.querySelector(containerSelector);\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value: function renderItems(itemsDataArray) {\n      var _this = this;\n      itemsDataArray.forEach(function (itemData) {\n        _this.renderer(itemData);\n      });\n    }\n  }, {\n    key: "addItem",\n    value: function addItem(htmlElement) {\n      // может быть тут сличать айдишники - проверять на владельца\n      this.container.prepend(htmlElement);\n    }\n  }]);\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nСоздайте класс Popup, который отвечает за открытие и закрытие попапа. Этот класс:\nПринимает в конструктор единственный параметр — селектор попапа.\nСодержит публичные методы open и close, которые отвечают за открытие и закрытие попапа.\nСодержит приватный метод _handleEscClose, который содержит логику закрытия попапа клавишей Esc.\n\nСодержит публичный метод setEventListeners, который добавляет слушатель клика иконке закрытия попапа.\nМодальное окно также закрывается при клике на затемнённую область вокруг формы.\n*/\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    this._popup = document.querySelector(popupSelector);\n    this._closeButton = this._popup.querySelector(".popup__close-button");\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopupByOverlay = this._closePopupByOverlay.bind(this);\n  }\n  Popup_createClass(Popup, [{\n    key: "_closePopupByOverlay",\n    value: function _closePopupByOverlay(evt) {\n      if (evt.target.classList.contains("popup")) {\n        this.close();\n      }\n    }\n  }, {\n    key: "open",\n    value: function open() {\n      this._popup.classList.add("popup_opened");\n      document.addEventListener("keydown", this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove("popup_opened");\n      document.removeEventListener("keydown", this._handleEscClose); // Удаляю слушатель клавы.\n    }\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(evt) {\n      if (evt.key === "Escape") {\n        this.close();\n      }\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this = this;\n      // добавление слушателя на Оверлей\n      this._popup.addEventListener("click", this._closePopupByOverlay);\n      this._closeButton.addEventListener("click", function () {\n        return _this.close();\n      });\n    }\n  }]);\n  return Popup;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\nPopupWithImage наследует от Popup, перезаписывать родительский метод open.\nВ методе open класса PopupWithImage вставлять в попап картинку с src изображения и подписью.\n*/\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._zoomedImg = _this._popup.querySelector(".popup__image-zoom");\n    _this._caption = _this._popup.querySelector(".popup__caption");\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(_ref) {\n      var name = _ref.name,\n        link = _ref.link;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n      this._zoomedImg.src = link;\n      this._zoomedImg.alt = name;\n      this._caption.textContent = name;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\n/*\nСоздайте класс PopupWithForm, который наследует от Popup. Этот класс:\nКроме селектора попапа принимает в конструктор колбэк сабмита формы.\n\nСодержит приватный метод _getInputValues, который собирает данные всех полей формы.\nПерезаписывает родительский метод setEventListeners.\nМетод setEventListeners класса PopupWithForm должен не только добавлять\nобработчик клика иконке закрытия, но и добавлять обработчик сабмита формы.\nПерезаписывает родительский метод close, так как при закрытии попапа форма должна ещё и сбрасываться.\nДля каждого попапа создавайте свой экземпляр класса PopupWithForm.\n*/\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, onSubmit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._onSubmit = onSubmit;\n    _this._form = _this._popup.querySelector(".popup__form");\n    _this._inputList = Array.from(_this._form.querySelectorAll(".popup__input"));\n    _this._handleSubmit = _this._handleSubmit.bind(PopupWithForm_assertThisInitialized(_this));\n    _this.setEventListeners = _this.setEventListeners.bind(PopupWithForm_assertThisInitialized(_this));\n    _this.submitButton = _this._form.querySelector(".popup__submit-button");\n    //\n    // метод setSubmitButtonLabel лишний\n    // this.setSubmitButtonLabel = this.setSubmitButtonLabel.bind(this);\n    _this._submitButtonText = _this.submitButton.textContent;\n    return _this;\n  }\n\n  // собирает данные всех полей формы.\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._formInputValues = {};\n      this._inputList.forEach(function (input) {\n        _this2._formInputValues[input.name] = input.value;\n      });\n      return this._formInputValues;\n    }\n\n    // isLoading - не переменная, а параметр,\n    // используемый только тут\n  }, {\n    key: "renderLoading",\n    value: function renderLoading(isLoading) {\n      var loadingText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Сохранение...";\n      if (isLoading) {\n        this.submitButton.textContent = loadingText;\n      } else {\n        this.submitButton.textContent = this._submitButtonText;\n      }\n    }\n\n    // Метод сабмита избавил от инструкций по смене лейбака\n    // И от асинхронности т.к. уже не нужно ждать ответа сервака.\n  }, {\n    key: "_handleSubmit",\n    value: function _handleSubmit(evt) {\n      evt.preventDefault();\n      this._onSubmit(this._getInputValues());\n    }\n    //\n    //\n    // Метод Артёма с заменой лейбака. Метод заменил на простой.\n    // Т.к. ревьювер предложил свой универсальный\n    //\n    // async _handleSubmit(evt) {\n    //   evt.preventDefault();\n    //   const originalText = this.submitButton.textContent;\n\n    //   try {\n    //     this.submitButton.textContent = "Сохранение...";\n    //     debugger;\n    //     await this._onSubmit(this._getInputValues());\n    //     this.close();\n    //   } finally {\n    //     this.submitButton.textContent = originalText;\n    //   }\n    // }\n\n    //\n    // лишний метод, т.к. использовал ревьюверский\n    // setSubmitButtonLabel(label) {\n    //   this.submitButton.textContent = label;\n    // }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener("submit", this._handleSubmit);\n    }\n  }, {\n    key: "setInputValues",\n    value: function setInputValues(data) {\n      this._inputList.forEach(function (input) {\n        // тут вставляем в `value` инпута данные из объекта по атрибуту `name` этого инпута\n        input.value = data[input.name];\n        console.log("setInputValues");\n      });\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nКласс UserInfo отвечает за управление отображением информации о пользователе на странице. Этот класс:\n\nПринимает в конструктор объект с селекторами двух элементов: элемента имени пользователя\nи элемента информации о себе.\n\nСодержит публичный метод getUserInfo, который возвращает объект с данными пользователя.\nЭтот метод пригодится когда данные пользователя нужно будет подставить в форму при открытии.\n\nСодержит публичный метод setUserInfo, который принимает новые данные пользователя и добавляет их на страницу.\n*/\n\n// <h1> Жак-Ив Кусто has class = profile__name\n// <p> Исследователь океана  class = profile__about\n\n// form classes = popup__form    and    popup__form_type_user-profile\n// form name = profile-form\n\n// input Жак-Ив classes =   popup__input     and      popup__input_type_user-name\n// input Жак-Ив id = user-name\n// input Жак-Ив = name\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var nameSelector = _ref.nameSelector,\n      aboutSelector = _ref.aboutSelector,\n      avatarSelector = _ref.avatarSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._nameElement = document.querySelector(nameSelector); // page element, NOT ITPUT\n    this._aboutElement = document.querySelector(aboutSelector); // page element, NOT ITPUT\n    this._avatarElement = document.querySelector(avatarSelector);\n    this.data = {};\n  }\n\n  // возвращает объект данных профиля\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return this.data;\n    }\n\n    // принимает новые данные пользователя и добавляет их на страницу\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        about = _ref2.about,\n        avatar = _ref2.avatar,\n        _id = _ref2._id;\n      this._nameElement.textContent = name;\n      this._aboutElement.textContent = about;\n      this._avatarElement.style.backgroundImage = "url(".concat(avatar, ")");\n      // this._id = _id;\n      this.data = {\n        name: name,\n        about: about,\n        avatar: avatar,\n        _id: _id\n      };\n    }\n\n    // заменил этот кусок свежим с деструктуризацией объекта\n    // setUserInfo(userData) {\n    //   this.data = userData;\n    //   this._nameElement.textContent = this.data.name;\n    //   this._aboutElement.textContent = this.data.about;\n    //   this._avatarElement.style.backgroundImage = `url(${this.data.avatar})`;\n    //   debugger;\n    // }\n  }]);\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(options) {\n    Api_classCallCheck(this, Api);\n    this.options = options;\n  }\n  Api_createClass(Api, [{\n    key: "_checkResponse",\n    value: function _checkResponse(res) {\n      // тут проверка ответа\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n    }\n  }, {\n    key: "setInitialUserInfo",\n    value: function setInitialUserInfo() {\n      return fetch("".concat(this.options.baseUrl, "/users/me"), {\n        method: "GET",\n        headers: this.options.headers\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      return fetch("".concat(this.options.baseUrl, "/cards"), {\n        method: "GET",\n        headers: this.options.headers\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "addLike",\n    value: function addLike(card) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(card.cardData._id, "/likes"), {\n        method: "PUT",\n        headers: this.options.headers\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "removeLike",\n    value: function removeLike(card) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(card.cardData._id, "/likes"), {\n        method: "DELETE",\n        headers: this.options.headers\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "editProfile",\n    value: function editProfile(inputValues) {\n      return fetch("".concat(this.options.baseUrl, "/users/me"), {\n        method: "PATCH",\n        headers: this.options.headers,\n        body: JSON.stringify(inputValues)\n      }).then(this._checkResponse);\n    }\n    // editProfile(newName, newAbout) {\n    //   return fetch(`${this.options.baseUrl}/users/me`, {\n    //     method: "PATCH",\n    //     headers: this.options.headers,\n    //     body: JSON.stringify({ name: newName, about: newAbout }),\n    //   }).then(this._checkResponse);\n    // }\n  }, {\n    key: "addCard",\n    value: function addCard(cardData) {\n      return fetch("".concat(this.options.baseUrl, "/cards"), {\n        method: "POST",\n        headers: this.options.headers,\n        body: JSON.stringify({\n          name: cardData.name,\n          link: cardData.link\n        })\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "delete",\n    value: function _delete(cardId) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(cardId), {\n        method: "DELETE",\n        headers: this.options.headers\n      }).then(this._checkResponse);\n    }\n  }, {\n    key: "avatarEdit",\n    value: function avatarEdit(avatar) {\n      return fetch("".concat(this.options.baseUrl, "/users/me/avatar"), {\n        method: "PATCH",\n        headers: this.options.headers,\n        body: JSON.stringify(avatar)\n      }).then(this._checkResponse);\n    }\n  }]);\n  return Api;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithConfirmation.js\nfunction PopupWithConfirmation_typeof(obj) { "@babel/helpers - typeof"; return PopupWithConfirmation_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithConfirmation_typeof(obj); }\nfunction PopupWithConfirmation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithConfirmation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithConfirmation_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithConfirmation_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithConfirmation_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithConfirmation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithConfirmation_toPropertyKey(arg) { var key = PopupWithConfirmation_toPrimitive(arg, "string"); return PopupWithConfirmation_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithConfirmation_toPrimitive(input, hint) { if (PopupWithConfirmation_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithConfirmation_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithConfirmation_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithConfirmation_get = Reflect.get.bind(); } else { PopupWithConfirmation_get = function _get(target, property, receiver) { var base = PopupWithConfirmation_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithConfirmation_get.apply(this, arguments); }\nfunction PopupWithConfirmation_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithConfirmation_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithConfirmation_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithConfirmation_setPrototypeOf(subClass, superClass); }\nfunction PopupWithConfirmation_setPrototypeOf(o, p) { PopupWithConfirmation_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithConfirmation_setPrototypeOf(o, p); }\nfunction PopupWithConfirmation_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithConfirmation_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithConfirmation_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithConfirmation_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithConfirmation_possibleConstructorReturn(this, result); }; }\nfunction PopupWithConfirmation_possibleConstructorReturn(self, call) { if (call && (PopupWithConfirmation_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithConfirmation_assertThisInitialized(self); }\nfunction PopupWithConfirmation_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithConfirmation_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithConfirmation_getPrototypeOf(o) { PopupWithConfirmation_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithConfirmation_getPrototypeOf(o); }\n\nvar PopupWithConfirm = /*#__PURE__*/function (_PopupWithForm) {\n  PopupWithConfirmation_inherits(PopupWithConfirm, _PopupWithForm);\n  var _super = PopupWithConfirmation_createSuper(PopupWithConfirm);\n  function PopupWithConfirm() {\n    PopupWithConfirmation_classCallCheck(this, PopupWithConfirm);\n    return _super.apply(this, arguments);\n  }\n  PopupWithConfirmation_createClass(PopupWithConfirm, [{\n    key: "open",\n    value:\n    // без конструктора. унаследованный сабмит будет перезаписан\n    function open(onSubmit) {\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirm.prototype), "open", this).call(this);\n      this._onSubmit = onSubmit;\n    }\n  }]);\n  return PopupWithConfirm;\n}(PopupWithForm);\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n // импорт главного файла стилей. Такая запись только для вебпака\n\n/*  Универсальная функцию сабмита любых форм. Принимает:\n    - функцию запроса,\n    - экземпляр попапа\n    - строку лейбла во время загрузки (опционально), т.к. есть дефолтное значение   */\n\nfunction handleSubmit(request, popupInstance) {\n  var loadingText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Сохранение...";\n  //\n  // Изменяем лейбл кнопки до запроса (методом класса PopupWithForm).\n  // Аргументы: булево значение параметра isLoading и опционально лейбак.\n  popupInstance.renderLoading(true, loadingText);\n\n  // запускаем запрос, переданный аргументом\n  request().then(function () {\n    popupInstance.close(); // закрывать попап нужно только в `then`\n  }).catch(function (err) {\n    console.error("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(err));\n  })\n  // возвращаю начальный лейбл методом (isLoading=false)\n  .finally(function () {\n    popupInstance.renderLoading(false);\n  });\n}\n\n// 🧢  функция открытия попапа ЗУМа - функция зумирования\nvar handleCardClick = function handleCardClick(cardData) {\n  return zoomPopup.open(cardData);\n};\n//\n//\n//// 🧢 колбек по конфирму (сабмит попапа с подтверждением).\n// Отдаю его при создании карточки классу Card.\nfunction handleDelete(card) {\n  confirmPopup.open(function () {\n    api.delete(card.cardData._id).then(function () {\n      card.handleDelete();\n      confirmPopup.close();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n}\n//\nvar confirmPopup = new PopupWithConfirm(".popup_type_confirm-del");\nconfirmPopup.setEventListeners();\n//\n//\n// 🧢 🔴 Функция создания заполненной разметки карточки. Функция создает, но не возвращает инстанс класса.\n// Возвращает рез-т работы метода getCard каласса Card, т.е. заполненную разметку карточки\n// const createCard = (...args) => new Card(...args).getCard();\n// занесли все аргументы передаваемые в функцию в массив ...args. Перечитать и тренировать rest, spread\n\nvar api = new Api({\n  baseUrl: "https://mesto.nomoreparties.co/v1/cohort-72",\n  headers: {\n    authorization: "ae5a51f8-81eb-4b98-b197-2ef227e48cb1",\n    "Content-Type": "application/json"\n  }\n});\nfunction handleLike(card) {\n  if (card.isLiked) {\n    api.removeLike(card).then(function (res) {\n      card.updateLikes(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  } else {\n    api.addLike(card).then(function (res) {\n      card.updateLikes(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n}\nvar userID = "";\nfunction createCard(data) {\n  var cardElement = new components_Card(data, "#card", handleCardClick, handleDelete, handleLike, myUserInfo.data._id);\n  return cardElement.getCard();\n}\n// 🧢 Функция-колбэк добавления карточи. Декларация. НЕ вызов. Используется форычом.\nvar renderCard = function renderCard(data) {\n  // в var тащу результат работы функции = разметку, а НЕ объект\n  var cardToAdd = createCard(data);\n  cardSection.addItem(cardToAdd);\n};\n\n// ПОЛУЧАЮ ИЗНАЧАЛЬНЫЕ КАРТОЧКИ\nvar cardSection = new Section(renderCard, ".gallery");\nvar promiseInitialUserInfo = api.setInitialUserInfo();\nvar promiseInitialCards = api.getInitialCards();\n\n// жду пока оба запроса вернутся чтобы сличать мой айди и понимать ставить ли корзину на карточку\nPromise.all([promiseInitialUserInfo, promiseInitialCards]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    responseInitialUserInfo = _ref2[0],\n    responseInitialCards = _ref2[1];\n  // userID - переменная в глобальном скоупе.\n  // Ее отдаю классу Card для сличения айдишников\n  userID = responseInitialUserInfo._id;\n  console.log(responseInitialUserInfo);\n  myUserInfo.setUserInfo(responseInitialUserInfo);\n\n  // responseInitialCards - массив объектов карточек для отрисовки\n  // renderItems- колбэк. Создает+наполняет разметку аргументом.\n  // Отдает ее вставить.\n  cardSection.renderItems(responseInitialCards);\n}).catch(function (err) {\n  console.log(err);\n});\n\n// Экземпляр класса UserInfo создается единожды\nvar myUserInfo = new UserInfo({\n  nameSelector: ".profile__name",\n  aboutSelector: ".profile__about",\n  avatarSelector: ".profile__avatar-edit-btn"\n});\n\n// // 🧢 описываю функцию-колбэк сабмита профиля заранее\n// const handleSubmitProfile = ({ name, about }) => {\n//   // Редактирование профиля - данные идут на сервер.\n//   return api\n//     .editProfile(name, about)\n//     .then((data) => {\n//       myUserInfo.setUserInfo(data);\n//       popupProfile.close();\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n// 🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴🔴\n// пример оптимизации обработчика сабмита формы профиля\nvar handleSubmitProfile = function handleSubmitProfile(inputValues) {\n  // создаем функцию, которая возвращает промис, так как любой запрос возвращает его\n  function makeRequest() {\n    // `return` позволяет продолжать цепочку `then, catch, finally`\n    return api.editProfile(inputValues).then(function (userData) {\n      myUserInfo.setUserInfo(userData);\n    });\n  }\n  // вызываем универсальную функцию, передавая в нее запрос, экземпляр попапа и текст изменения кнопки (если нужен другой, а не `"Сохранение..."`)\n  handleSubmit(makeRequest, popupProfile);\n};\n\n// попапу профиля передаю функцию сабмита профиля колбэком при создании инстанса попапа\nvar popupProfile = new PopupWithForm(".popup_type_user-profile", function (inputVaues) {\n  handleSubmitProfile(inputVaues);\n});\n\n// вешаю слушатели попапу профиля\npopupProfile.setEventListeners();\n//\n// 🧢 👨‍💼 колбэк кнопки редактирования профиля - откроет попап\nvar editProfile = function editProfile() {\n  formValidators["profile-form"].resetValidation();\n  popupProfile.setInputValues(myUserInfo.getUserInfo());\n  popupProfile.open();\n};\n\n// 👨‍💼\neditProfileBtn.addEventListener("click", function () {\n  return editProfile();\n});\n\n// 🧢 колбэк слушателя сабмита карточки\nvar handleSubmitAddPlace = function handleSubmitAddPlace(formData) {\n  // formValidators["add-place-form"].resetValidation(); При сабмите формы не нужно вызывать resetValidation, так как это не имеет смысла. Нужно делать это только при открытии теперь. И оно уже там есть\n\n  // создаем функцию, которая возвращает промис, так как любой запрос возвращает его\n  function makeRequest() {\n    return api.addCard({\n      name: formData.placeName,\n      link: formData.placeUrl\n    }).then(function (cardDataFromApi) {\n      var card1by1 = createCard(cardDataFromApi);\n      cardSection.addItem(card1by1);\n    });\n  }\n  // вызываем универсальную функцию, передавая в нее запрос, экземпляр попапа и текст изменения кнопки (если нужен другой, а не `"Сохранение..."`)\n  handleSubmit(makeRequest, addPlacePopup);\n};\n\n// срарая версия. Заменил на предложенную ревьювером.\n// const handleSubmitAddPlace = (formData) => {\n//   // formValidators["add-place-form"].resetValidation(); При сабмите формы не нужно вызывать resetValidation, так как это не имеет смысла. Нужно делать это только при открытии теперь. И оно уже там есть\n//   api\n//     .addCard({ name: formData.placeName, link: formData.placeUrl })\n//     .then((cardDataFromApi) => {\n//       const card1by1 = createCard(cardDataFromApi);\n//       cardSection.addItem(card1by1);\n//     })\n//     .then(() => {\n//       addPlacePopup.close();\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n\nvar addPlacePopup = new PopupWithForm(".popup_type_new-place", handleSubmitAddPlace);\n\n// комменты от Артёма "ты передаешь не асинхронную функцию" и т.д.\n// const addPlacePopup = new PopupWithForm(".popup_type_new-place", (formData) => {\n//   handleSubmitAddPlace(formData);\n// });\n\naddPlacePopup.setEventListeners();\naddPlaceButton.addEventListener("click", function (evt) {\n  formValidators["add-place-form"].resetValidation();\n  addPlacePopup.open();\n});\nvar zoomPopup = new PopupWithImage(".popup_type_zoom-image");\nzoomPopup.setEventListeners();\nvar formValidators = {}; // создаю константу с пустысм объектом.\n\n// 🧢 описываю функцию валитатор\nvar enableValidation = function enableValidation(validationConfig) {\n  // Собираю массив форм (массив кусков разметки, а не имён)\n  var formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach(function (formElement) {\n    var validator = new components_FormValidator(validationConfig, formElement);\n    var formName = formElement.getAttribute("name");\n    formValidators[formName] = validator;\n    validator.enableValidation(); // вызов метода класса, а не рекурсия\n  });\n};\n\nenableValidation(validationConfig); // вызов функции\n\n// 🧢 👨‍💼 колбэк кнопки редактирования аватара - откроет попап\nfunction editAvatar() {\n  formValidators["avatar-form"].resetValidation();\n  popupAvatar.open();\n}\n\n// слушатель на аватар\neditAvatarBtn.addEventListener("click", function () {\n  return editAvatar();\n});\n\n// 🧢 👨‍💼 колбэк сабмита аватара\nfunction handleAvatarEdit(inputValue) {\n  // создаю функцию, она возвращает промис, т.к. любой запрос возвращает его\n  function makeRequest() {\n    // `return` позволяет продолжать цепочку `then, catch, finally`\n    return api.avatarEdit(inputValue).then(function (newAvatarLink) {\n      myUserInfo.setUserInfo(newAvatarLink);\n    });\n  }\n  // вызываю универ. функцию, передавая ей запрос, экземпляр попапа и лейбл кнопки (если нужен не `"Сохранение..."`)\n  handleSubmit(makeRequest, popupAvatar);\n}\n\n// старая функция, заменил на ревьюверскую\n// // 🧢 👨‍💼 колбэк сабмита аватара\n// function handleAvatarEdit(inputValue) {\n//   console.log("launched avatar handler. It\'s values: ");\n//   console.log(inputValue);\n//   return api\n//     .avatarEdit(inputValue)\n//     .then((newAvatarLink) => {\n//       console.log("ответ на апдейт авы с апи: ", newAvatarLink);\n//       myUserInfo.setUserInfo(newAvatarLink);\n//       popupAvatar.close();\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// }\n\n// popup AVATAR URL\nvar popupAvatar = new PopupWithForm(".popup_type_avatar", function (inputValue) {\n  handleAvatarEdit(inputValue);\n});\npopupAvatar.setEventListeners();\n\n// test git 2023-07-27 at 14:27//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///750\n')}},__webpack_exports__={};__webpack_modules__[750]()})();