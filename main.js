(()=>{"use strict";var __webpack_modules__={750:()=>{eval('\n// UNUSED EXPORTS: myUserInfo\n\n;// CONCATENATED MODULE: ./src/utils/constants.js\nvar validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__submit-button",\n  inactiveButtonClass: "popup__submit-button_inactive",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible"\n};\nvar popupUser = function () {\n  var popup = document.querySelector(".popup_type_user-profile");\n  return {\n    popup: popup,\n    // form: popup.querySelector(".popup__form_type_user-profile"),\n    form: document.forms["profile-form"],\n    nameInput: popup.querySelector(".popup__input_type_user-name"),\n    aboutInput: popup.querySelector(".popup__input_type_user-about")\n  };\n}(); // Последние 2 скобки не лишние - самовызывающаяся функция.\n\nvar addPlaceButton = document.querySelector(".profile__add-place-btn");\nvar addPlaceForm = document.querySelector(".popup__form_type_add-place");\n// export const placeNameInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-name"\n// );\n// export const pleceUrlInput = addPlaceForm.querySelector(\n//   ".popup__input_type_place-url"\n// );\nvar editProfileBtn = document.querySelector(".profile__edit-btn");\n\n// export const likeNumber = document.querySelector(".gallery__like-number");\n\nvar editAvatarBtn = document.querySelector(".profile__avatar-edit-btn");\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(cardData, templateSelector, onImageClick, onDelete, onLike, userID) {\n    _classCallCheck(this, Card);\n    this._onImageClick = onImageClick;\n    this._onDelete = onDelete;\n    this._cardData = cardData;\n    this._userID = userID;\n    this._onLike = onLike;\n    this._onLike = this._onLike.bind(this);\n    // this.isLiked = this._cardData.likes.some((likes)=>{return likes._id === this._userID;});\n    this._template = document.querySelector(templateSelector).content;\n    this.updateLikes = this.updateLikes.bind(this);\n  }\n  _createClass(Card, [{\n    key: "updateLikes",\n    value: function updateLikes(cardData) {\n      var _this = this;\n      this._likesElement.textContent = cardData.likes.length;\n      // this.isLiked = !this.isLiked;\n      this.isLiked = cardData.likes.some(function (likes) {\n        return likes._id === _this._userID;\n      });\n      this._likeButton.classList.toggle("gallery__like_active", this.isLiked);\n    }\n  }, {\n    key: "handleDelete",\n    value: function handleDelete() {\n      if (this._card) {\n        this._card.remove();\n        this._card = null; // Лучше при удалении карточки очистить ссылку на DOM-элемент:\n      }\n    }\n  }, {\n    key: "_setListeners",\n    value: function _setListeners() {\n      var _this2 = this;\n      this._deleteButton.addEventListener("click", function () {\n        return _this2._onDelete(_this2);\n      }); // original delete // this._deleteButton.addEventListener("click", () => this._handleDelete());\n      this._likeButton.addEventListener("click", function () {\n        return _this2._onLike(_this2);\n      });\n      this._cardImage.addEventListener("click", function () {\n        return _this2._onImageClick(_this2._cardData);\n      });\n    }\n  }, {\n    key: "_createCard",\n    value: function _createCard() {\n      /* нельзя перенести this._card и все что в нем ищется в конструктор,т.к. ниже в методе getCard условие на отсутствие карточки. Если объявить ее в конструкторе, то условие ее найдет и не создаст новую.\n      Почитать про патерн Singleton или одиночка. */\n      this._card = this._template.cloneNode(true).children[0];\n      this._cardImage = this._card.querySelector(".gallery__img");\n      this._cardText = this._card.querySelector(".gallery__text");\n      this._deleteButton = this._card.querySelector(".gallery__delete");\n      this._likeButton = this._card.querySelector(".gallery__like");\n      this._likesElement = this._card.querySelector(".gallery__like-number");\n      this._cardImage.src = this._cardData.link;\n      this._cardImage.alt = this._cardData.name;\n      this._cardText.textContent = this._cardData.name;\n      this._likesElement.textContent = this._cardData.likes.length;\n      this._setListeners();\n    }\n  }, {\n    key: "getCard",\n    value: function getCard() {\n      var _this3 = this;\n      if (!this._card) {\n        this._createCard();\n      }\n      // определю залайкана ли карточка МНОЮ\n      this.isLiked = this._cardData.likes.some(function (likes) {\n        return likes._id === _this3._userID;\n      });\n      // если я лайкнул ранее, то крашу сердечно\n      if (this.isLiked) {\n        this._likeButton.classList.add("gallery__like_active");\n      }\n      if (this._userID !== this._cardData.owner._id) {\n        this._deleteButton.remove();\n        this._deleteButton = null; // console.log("IDs don\'t match");\n      }\n\n      return this._card;\n    }\n  }]);\n  return Card;\n}();\n/* harmony default export */ const components_Card = (Card);\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = FormValidator_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, form) {\n    var _this = this;\n    FormValidator_classCallCheck(this, FormValidator);\n    _defineProperty(this, "_toggleButton", function () {\n      if (_this._form.checkValidity()) {\n        _this._enableButton();\n      } else {\n        _this._disableButton();\n      }\n    });\n    _defineProperty(this, "_setInputValid", function (formField) {\n      formField.input.classList.remove(_this._config.inputErrorClass);\n      formField.error.textContent = "";\n      formField.error.classList.remove(_this._config.errorClass);\n    });\n    _defineProperty(this, "_setInputInvalid", function (formField) {\n      formField.input.classList.add(_this._config.inputErrorClass);\n      formField.error.textContent = formField.input.validationMessage;\n      formField.error.classList.add(_this._config.errorClass);\n    });\n    _defineProperty(this, "_checkInputValidity", function (formField) {\n      if (formField.input.checkValidity()) {\n        _this._setInputValid(formField);\n      } else {\n        _this._setInputInvalid(formField);\n      }\n    });\n    // ощистка форм от ошибок, оставленных при прошлом закрытии формы.\n    _defineProperty(this, "resetValidation", function () {\n      _this._toggleButton();\n      _this._formFields.forEach(function (formField) {\n        _this._setInputValid(formField);\n      });\n    });\n    _defineProperty(this, "_setListeners", function () {\n      _this._formFields.forEach(function (formField) {\n        formField.input.addEventListener("input", function () {\n          _this._checkInputValidity(formField);\n          _this._toggleButton(_this._config, _this._form);\n        });\n      });\n    });\n    _defineProperty(this, "enableValidation", function () {\n      _this._setListeners();\n      _this._toggleButton();\n    });\n    this._config = config;\n    this._form = form;\n    this._submitButton = this._form.querySelector(this._config.submitButtonSelector);\n    this._inputs = this._form.querySelectorAll(this._config.inputSelector);\n    this._inputsArray = Array.from(this._inputs);\n    this._formFields = this._inputsArray.map(function (input) {\n      return {\n        input: input,\n        error: _this._form.querySelector(".".concat(input.id, "-input-error"))\n      };\n    });\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_enableButton",\n    value: function _enableButton() {\n      // this._submitButton.removeAttribute("disabled"); // полная запись\n      this._submitButton.disabled = false; // краткая версия\n      this._submitButton.classList.remove(this._config.inactiveButtonClass);\n    }\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.disabled = true; // краткая версия\n      // this._submitButton.setAttribute("disabled", "true"); // полная версия\n      this._submitButton.classList.add(this._config.inactiveButtonClass);\n    }\n  }]);\n  return FormValidator;\n}();\n/* harmony default export */ const components_FormValidator = (FormValidator);\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(renderer, containerSelector) {\n    Section_classCallCheck(this, Section);\n    this.renderer = renderer;\n    this.container = document.querySelector(containerSelector);\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value: function renderItems(itemsDataArray) {\n      var _this = this;\n      itemsDataArray.forEach(function (itemData) {\n        _this.renderer(itemData);\n      });\n    }\n  }, {\n    key: "addItem",\n    value: function addItem(htmlElement) {\n      // может быть тут сличать айдишники - проверять на владельца\n      this.container.prepend(htmlElement);\n    }\n  }]);\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nСоздайте класс Popup, который отвечает за открытие и закрытие попапа. Этот класс:\nПринимает в конструктор единственный параметр — селектор попапа.\nСодержит публичные методы open и close, которые отвечают за открытие и закрытие попапа.\nСодержит приватный метод _handleEscClose, который содержит логику закрытия попапа клавишей Esc.\n\nСодержит публичный метод setEventListeners, который добавляет слушатель клика иконке закрытия попапа.\nМодальное окно также закрывается при клике на затемнённую область вокруг формы.\n*/\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    this._popup = document.querySelector(popupSelector);\n    this._closeButton = this._popup.querySelector(".popup__close-button");\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopupByOverlay = this._closePopupByOverlay.bind(this);\n  }\n  Popup_createClass(Popup, [{\n    key: "_closePopupByOverlay",\n    value: function _closePopupByOverlay(evt) {\n      if (evt.target.classList.contains("popup")) {\n        this.close();\n      }\n    }\n  }, {\n    key: "open",\n    value: function open() {\n      this._popup.classList.add("popup_opened");\n      document.addEventListener("keydown", this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove("popup_opened");\n      document.removeEventListener("keydown", this._handleEscClose); // Удаляю слушатель клавы.\n    }\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(evt) {\n      if (evt.key === "Escape") {\n        this.close();\n      }\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this = this;\n      // добавление слушателя на Оверлей\n      this._popup.addEventListener("click", this._closePopupByOverlay);\n      this._closeButton.addEventListener("click", function () {\n        return _this.close();\n      });\n    }\n  }]);\n  return Popup;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\nPopupWithImage наследует от Popup, перезаписывать родительский метод open.\nВ методе open класса PopupWithImage вставлять в попап картинку с src изображения и подписью.\n*/\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._zoomedImg = _this._popup.querySelector(".popup__image-zoom");\n    _this._caption = _this._popup.querySelector(".popup__caption");\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(_ref) {\n      var name = _ref.name,\n        link = _ref.link;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n      this._zoomedImg.src = link;\n      this._zoomedImg.alt = name;\n      this._caption.textContent = name;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == PopupWithForm_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\n/*\nСоздайте класс PopupWithForm, который наследует от Popup. Этот класс:\nКроме селектора попапа принимает в конструктор колбэк сабмита формы.\n\nСодержит приватный метод _getInputValues, который собирает данные всех полей формы.\nПерезаписывает родительский метод setEventListeners.\nМетод setEventListeners класса PopupWithForm должен не только добавлять\nобработчик клика иконке закрытия, но и добавлять обработчик сабмита формы.\nПерезаписывает родительский метод close, так как при закрытии попапа форма должна ещё и сбрасываться.\nДля каждого попапа создавайте свой экземпляр класса PopupWithForm.\n*/\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, onSubmit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._onSubmit = onSubmit;\n    _this._form = _this._popup.querySelector(".popup__form");\n    _this._inputList = Array.from(_this._form.querySelectorAll(".popup__input"));\n    _this._handleSubmit = _this._handleSubmit.bind(PopupWithForm_assertThisInitialized(_this));\n    _this.setEventListeners = _this.setEventListeners.bind(PopupWithForm_assertThisInitialized(_this));\n    _this.submitButton = _this._form.querySelector(".popup__submit-button");\n    _this.setSubmitButtonLabel = _this.setSubmitButtonLabel.bind(PopupWithForm_assertThisInitialized(_this));\n    return _this;\n  }\n\n  // собирает данные всех полей формы.\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._formInputValues = {};\n      this._inputList.forEach(function (input) {\n        _this2._formInputValues[input.name] = input.value;\n      });\n      return this._formInputValues;\n    }\n  }, {\n    key: "_handleSubmit",\n    value: function () {\n      var _handleSubmit2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(evt) {\n        var originalText;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              originalText = this.submitButton.textContent;\n              _context.prev = 2;\n              this.submitButton.textContent = "Сохранение...";\n              // debugger;\n              _context.next = 6;\n              return this._onSubmit(this._getInputValues());\n            case 6:\n              this.close();\n            case 7:\n              _context.prev = 7;\n              this.submitButton.textContent = originalText;\n              return _context.finish(7);\n            case 10:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[2,, 7, 10]]);\n      }));\n      function _handleSubmit(_x) {\n        return _handleSubmit2.apply(this, arguments);\n      }\n      return _handleSubmit;\n    }()\n  }, {\n    key: "setSubmitButtonLabel",\n    value: function setSubmitButtonLabel(label) {\n      this.submitButton.textContent = label;\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener("submit", this._handleSubmit);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\nКласс UserInfo отвечает за управление отображением информации о пользователе на странице. Этот класс:\n\nПринимает в конструктор объект с селекторами двух элементов: элемента имени пользователя\nи элемента информации о себе.\n\nСодержит публичный метод getUserInfo, который возвращает объект с данными пользователя.\nЭтот метод пригодится когда данные пользователя нужно будет подставить в форму при открытии.\n\nСодержит публичный метод setUserInfo, который принимает новые данные пользователя и добавляет их на страницу.\n*/\n\n// <h1> Жак-Ив Кусто has class = profile__name\n// <p> Исследователь океана  class = profile__about\n\n// form classes = popup__form    and    popup__form_type_user-profile\n// form name = profile-form\n\n// input Жак-Ив classes =   popup__input     and      popup__input_type_user-name\n// input Жак-Ив id = user-name\n// input Жак-Ив = name\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var nameSelector = _ref.nameSelector,\n      aboutSelector = _ref.aboutSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._nameElement = document.querySelector(nameSelector); // page element, NOT ITPUT\n    this._aboutElement = document.querySelector(aboutSelector); // page element, NOT ITPUT\n    this.data = {};\n    this._avatarElement = document.querySelector(".profile__avatar-edit-btn");\n  }\n\n  // возвращает объект данных профиля\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return this.data;\n    }\n\n    // принимает новые данные пользователя и добавляет их на страницу\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(userData) {\n      this.data = userData;\n      this._nameElement.textContent = this.data.name;\n      this._aboutElement.textContent = this.data.about;\n      this._avatarElement.style.backgroundImage = "url(".concat(this.data.avatar, ")");\n    }\n  }]);\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(options) {\n    Api_classCallCheck(this, Api);\n    this.options = options;\n  }\n  Api_createClass(Api, [{\n    key: "setInitialUserInfo",\n    value: function setInitialUserInfo() {\n      return fetch("".concat(this.options.baseUrl, "/users/me"), {\n        method: "GET",\n        headers: this.options.headers\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u043E\\u043B-\\u044F \\u043A\\u0430\\u0440\\u0442: ".concat(res.status));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      return fetch("".concat(this.options.baseUrl, "/cards"), {\n        method: "GET",\n        headers: this.options.headers\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F: ".concat(res.status));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: "addLike",\n    value: function addLike(card) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(card._cardData._id, "/likes"), {\n        method: "PUT",\n        headers: this.options.headers\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438 \\u043B\\u0430\\u0439\\u043A\\u0430: ".concat(res.status));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: "removeLike",\n    value: function removeLike(card) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(card._cardData._id, "/likes"), {\n        method: "DELETE",\n        headers: this.options.headers\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0441\\u043D\\u044F\\u0442\\u0438\\u044F \\u043B\\u0430\\u0439\\u043A\\u0430:  ".concat(res.status));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: "editProfile",\n    value: function editProfile(newName, newAbout) {\n      return fetch("".concat(this.options.baseUrl, "/users/me"), {\n        method: "PATCH",\n        headers: this.options.headers,\n        body: JSON.stringify({\n          name: newName,\n          about: newAbout\n        })\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0441\\u0430\\u0431\\u043C\\u0438\\u0442\\u0430: ".concat(res.status));\n      });\n    }\n  }, {\n    key: "addCard",\n    value: function addCard(cardData) {\n      return fetch("".concat(this.options.baseUrl, "/cards"), {\n        method: "POST",\n        headers: this.options.headers,\n        body: JSON.stringify({\n          name: cardData.name,\n          link: cardData.link\n        })\n      }).then(function (res) {\n        if (res) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: ".concat(res.status));\n      });\n    }\n  }, {\n    key: "delete",\n    value: function _delete(cardId) {\n      return fetch("".concat(this.options.baseUrl, "/cards/").concat(cardId), {\n        method: "DELETE",\n        headers: this.options.headers\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u044F: ".concat(res.status));\n      });\n    }\n  }, {\n    key: "avatarEdit",\n    value: function avatarEdit(avatar) {\n      return fetch("".concat(this.options.baseUrl, "/users/me/avatar"), {\n        method: "PATCH",\n        headers: this.options.headers,\n        body: JSON.stringify(avatar)\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0430\\u0432\\u044B ".concat(res.status));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }]);\n  return Api;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithConfirmation.js\nfunction PopupWithConfirmation_typeof(obj) { "@babel/helpers - typeof"; return PopupWithConfirmation_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithConfirmation_typeof(obj); }\nfunction PopupWithConfirmation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithConfirmation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithConfirmation_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithConfirmation_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithConfirmation_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithConfirmation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithConfirmation_toPropertyKey(arg) { var key = PopupWithConfirmation_toPrimitive(arg, "string"); return PopupWithConfirmation_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithConfirmation_toPrimitive(input, hint) { if (PopupWithConfirmation_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithConfirmation_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithConfirmation_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithConfirmation_get = Reflect.get.bind(); } else { PopupWithConfirmation_get = function _get(target, property, receiver) { var base = PopupWithConfirmation_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithConfirmation_get.apply(this, arguments); }\nfunction PopupWithConfirmation_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithConfirmation_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithConfirmation_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithConfirmation_setPrototypeOf(subClass, superClass); }\nfunction PopupWithConfirmation_setPrototypeOf(o, p) { PopupWithConfirmation_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithConfirmation_setPrototypeOf(o, p); }\nfunction PopupWithConfirmation_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithConfirmation_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithConfirmation_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithConfirmation_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithConfirmation_possibleConstructorReturn(this, result); }; }\nfunction PopupWithConfirmation_possibleConstructorReturn(self, call) { if (call && (PopupWithConfirmation_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithConfirmation_assertThisInitialized(self); }\nfunction PopupWithConfirmation_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithConfirmation_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithConfirmation_getPrototypeOf(o) { PopupWithConfirmation_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithConfirmation_getPrototypeOf(o); }\n\nvar PopupWithConfirm = /*#__PURE__*/function (_PopupWithForm) {\n  PopupWithConfirmation_inherits(PopupWithConfirm, _PopupWithForm);\n  var _super = PopupWithConfirmation_createSuper(PopupWithConfirm);\n  function PopupWithConfirm() {\n    PopupWithConfirmation_classCallCheck(this, PopupWithConfirm);\n    return _super.apply(this, arguments);\n  }\n  PopupWithConfirmation_createClass(PopupWithConfirm, [{\n    key: "open",\n    value:\n    // без конструктора. унаследованный сабмит будет перезаписан\n    function open(onSubmit) {\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirm.prototype), "open", this).call(this);\n      this._onSubmit = onSubmit;\n    }\n  }]);\n  return PopupWithConfirm;\n}(PopupWithForm);\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction pages_typeof(obj) { "@babel/helpers - typeof"; return pages_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, pages_typeof(obj); }\nfunction pages_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ pages_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == pages_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction pages_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n // импорт главного файла стилей. Такая запись только для вебпака\n\n// 🧢  функция открытия попапа ЗУМа - функция зумирования\nvar handleCardClick = function handleCardClick(cardData) {\n  return zoomPopup.open(cardData);\n};\n//\n//\n//// 🧢 колбек по конфирму (сабмит попапа с подтверждением).\n// Отдаю его при создании карточки классу Card.\nfunction handleDelete(card) {\n  confirmPopup.open(function () {\n    api.delete(card._cardData._id).then(function () {\n      card.handleDelete();\n      confirmPopup.close();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n}\n//\nvar confirmPopup = new PopupWithConfirm(".popup_type_confirm-del");\nconfirmPopup.setEventListeners();\n//\n//\n// 🧢 🔴 Функция создания заполненной разметки карточки. Функция создает, но не возвращает инстанс класса.\n// Возвращает рез-т работы метода getCard каласса Card, т.е. заполненную разметку карточки\n// const createCard = (...args) => new Card(...args).getCard();\n// занесли все аргументы передаваемые в функцию в массив ...args. Перечитать и тренировать rest, spread\n\nvar api = new Api({\n  baseUrl: "https://mesto.nomoreparties.co/v1/cohort-68",\n  headers: {\n    authorization: "200161f1-5909-4319-b9ce-fec02ac5663d",\n    "Content-Type": "application/json"\n  }\n});\nfunction handleLike(card) {\n  if (card.isLiked) {\n    api.removeLike(card).then(function (res) {\n      card.updateLikes(res);\n    });\n  } else {\n    api.addLike(card).then(function (res) {\n      card.updateLikes(res);\n    });\n  }\n}\nvar userID = "";\n\n// 🧢 Функция-колбэк добавления карточи. Декларация. НЕ вызов. Используется форычом.\nvar renderCard = function renderCard(data) {\n  // в var тащу результат работы функции = разметку, а НЕ объект\n  var cardToAdd = new components_Card(data, "#card", handleCardClick, handleDelete, handleLike, myUserInfo.data._id).getCard();\n  cardSection.addItem(cardToAdd);\n};\n\n// ПОЛУЧАЮ ИЗНАЧАЛЬНЫЕ КАРТОЧКИ\nvar cardSection = new Section(renderCard, ".gallery");\nvar promiseInitialUserInfo = api.setInitialUserInfo();\nvar promiseInitialCards = api.getInitialCards();\n\n// жду пока оба запроса вернутся чтобы сличать мой айди и понимать ставить ли корзину на карточку\nPromise.all([promiseInitialUserInfo, promiseInitialCards]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    responseInitialUserInfo = _ref2[0],\n    responseInitialCards = _ref2[1];\n  // userID - переменная в глобальном скоупе.\n  // Ее отдаю классу Card для сличения айдишников\n  userID = responseInitialUserInfo._id;\n  myUserInfo.setUserInfo(responseInitialUserInfo);\n\n  // responseInitialCards - массив объектов карточек для отрисовки\n  // renderItems- колбэк. Создает+наполняет разметку аргументом.\n  // Отдает ее вставить.\n  cardSection.renderItems(responseInitialCards);\n}).catch(function (err) {\n  console.log(err);\n});\n\n// Экземпляр класса UserInfo создается единожды\nvar myUserInfo = new UserInfo({\n  nameSelector: ".profile__name",\n  aboutSelector: ".profile__about"\n});\n\n// 🧢 описываю функцию-колбэк сабмита профиля заранее\nvar handleSubmitProfile = function handleSubmitProfile(_ref3) {\n  var name = _ref3.name,\n    about = _ref3.about;\n  // Редактирование профиля - данные идут на сервер.\n  return api.editProfile(name, about).then(function (data) {\n    myUserInfo.setUserInfo(data);\n    popupProfile.close();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\n// попапу профиля передаю функцию сабмита профиля колбэком при создании инстанса попапа\nvar popupProfile = new PopupWithForm(".popup_type_user-profile", function (inputVaues) {\n  handleSubmitProfile(inputVaues);\n});\n\n// вешаю слушатели попапу профиля\npopupProfile.setEventListeners();\n\n// 🧢 👨‍💼 колбэк кнопки редактирования профиля - откроет попап\nvar editProfile = function editProfile() {\n  formValidators["profile-form"].resetValidation();\n  // Наполняю поля формы данными со страницы через метод класса UserInf\n\n  // деструктуризация. Переменные не покинут пределы слушателя\n  var _myUserInfo$getUserIn = myUserInfo.getUserInfo(),\n    name = _myUserInfo$getUserIn.name,\n    about = _myUserInfo$getUserIn.about;\n  popupUser.nameInput.value = name;\n  popupUser.aboutInput.value = about;\n  popupProfile.open();\n};\n\n// 👨‍💼\neditProfileBtn.addEventListener("click", function () {\n  return editProfile();\n});\n\n// 🧢 колбэк слушателя сабмита карточки\nvar handleSubmitAddPlace = function handleSubmitAddPlace(formData) {\n  formValidators["add-place-form"].resetValidation();\n  var delay = /*#__PURE__*/function () {\n    var _ref4 = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee(ms) {\n      return pages_regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (res) {\n              return setTimeout(res, ms);\n            });\n          case 2:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function delay(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return delay(2000).then(function () {\n    return api.addCard({\n      name: formData.placeName,\n      link: formData.placeUrl\n    }).then(function (cardDataFromApi) {\n      var card1by1 = new components_Card(cardDataFromApi, "#card", handleCardClick, handleDelete, handleLike, myUserInfo.data._id);\n      cardSection.addItem(card1by1.getCard());\n    }).then(function () {\n      addPlacePopup.close();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n};\nvar addPlacePopup = new PopupWithForm(".popup_type_new-place", handleSubmitAddPlace);\n\n// комменты от Артёма "ты передаешь не асинхронную функцию" и т.д.\n// const addPlacePopup = new PopupWithForm(".popup_type_new-place", (formData) => {\n//   handleSubmitAddPlace(formData);\n// });\n\naddPlacePopup.setEventListeners();\naddPlaceButton.addEventListener("click", function (evt) {\n  formValidators["add-place-form"].resetValidation();\n  addPlacePopup.open();\n});\nvar zoomPopup = new PopupWithImage(".popup_type_zoom-image");\nzoomPopup.setEventListeners();\nvar formValidators = {}; // создаю константу с пустысм объектом.\n\n// 🧢 описываю функцию валитатор\nvar enableValidation = function enableValidation(validationConfig) {\n  // Собираю массив форм (массив кусков разметки, а не имён)\n  var formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach(function (formElement) {\n    var validator = new components_FormValidator(validationConfig, formElement);\n    var formName = formElement.getAttribute("name");\n    formValidators[formName] = validator;\n    validator.enableValidation(); // вызов метода класса, а не рекурсия\n  });\n};\n\nenableValidation(validationConfig); // вызов функции\n\n//\n//\n// 🔴🔴🔴🔴🔴🔴🔴🔴🔴\n\n// 🧢 👨‍💼 колбэк кнопки редактирования аватара - откроет попап\nfunction editAvatar() {\n  formValidators["avatar-form"].resetValidation();\n  popupAvatar.open();\n}\n\n// слушатель на аватар\neditAvatarBtn.addEventListener("click", function () {\n  return editAvatar();\n});\n\n// 🧢 👨‍💼 колбэк сабмита аватара\nfunction handleAvatarEdit(inputValue) {\n  console.log("launched handler");\n  console.log(inputValue);\n  return api.avatarEdit(inputValue).then(function (newAvatarLink) {\n    console.log("ответ на апдейт авы с апи: ", newAvatarLink);\n    myUserInfo.setUserInfo(newAvatarLink);\n    popupAvatar.close();\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\n\n// popup AVATAR URL\nvar popupAvatar = new PopupWithForm(".popup_type_avatar", function (inputValue) {\n  handleAvatarEdit(inputValue);\n});\npopupAvatar.setEventListeners();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///750\n')}},__webpack_exports__={};__webpack_modules__[750]()})();